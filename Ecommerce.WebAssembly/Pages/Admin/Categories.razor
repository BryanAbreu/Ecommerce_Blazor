@page "/categories"
@inject ICategoryService categoryservice
@inject IToastService toastservice
@inject NavigationManager _NavService
@inject SweetAlertService swal


<div class="row justify-content-center  mt-3">
    <div class="col-sm-6 col-md-4 col-xl-3 mb-4">
        <div class="d-grid gap-1 col-12 mx-auto">
            <a class="btn btn-primary" href="/category">New Category</a>
        </div>
    </div>
    <div class="col-sm-6 col-md-8 col-xl-9 mb-4">
        <div class="input-group mb-3">
            <input type="text" class="form-control" placeholder="Search category..." @bind-value="search">
            <button class="btn btn-outline-secondary" type="button" @onclick="(async()=> await GetCategories(search))">
                <i class="oi oi-magnifying-glass"></i>
            </button>
        </div>
    </div>
</div>

<div class="row gx-4 row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-xl-4 justify-content-start mt-2">

    @if (List != null)
    {
        foreach (var item in List)
        {
            <div class="col mb-5">
                <div class="card h-100">
                    <div class="card-body p-4">
                        <div class="text-center">
                            <div class="text-center">
                                <i class="oi oi-folder" style="font-size:50px"></i>
                            </div>
                            <div class="text-start">
                                <p class="m-1"><b>Nombre:</b>@item.Nombre</p>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer bg-transparent">
                        <div class="row justify-content-between">
                            <a class="col-5 btn btn-sm btn-outline-primary mt-auto" href="/category/@item.IdCategoria"><i class="oi oi-pencil fs-5"></i></a>
                            <button class="col-5 btn btn-sm btn-outline-danger mt-auto" type="button" @onclick="(async () => await Delete(item))">
                                <i class="oi oi-trash fs-5"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </div>

        }

        
    }
    else
    {
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    }
</div>

@code {
    private List<CategoriaDTO>? List = null;
    private string search = "";

    private async Task GetCategories(string value = "")
    {
        var response = await categoryservice.List(value);
        if (response.EsCorrecto) List = (List<CategoriaDTO>)response.Response!;
        else List = new List<CategoriaDTO>();
    }

    protected override async Task OnInitializedAsync()
    {
        await GetCategories();
    }

    private async Task Delete(CategoriaDTO model)
    {
        SweetAlertResult resul = await swal.FireAsync(new SweetAlertOptions
            {
                Title = "Are you sure?",
                Text = $"Delete category {model.Nombre}",
                Icon = SweetAlertIcon.Question,
                ShowCancelButton = true,
                ConfirmButtonText = "Yes,Delete",
                CancelButtonText = "No,Cancel"
            });

        if (resul.IsConfirmed)
        {
            var response = await categoryservice.Delete(model.IdCategoria);
            if (response.EsCorrecto)
            {
                await GetCategories();
                toastservice.ShowSuccess("Category was deleted");
            }
            else
            {
                toastservice.ShowError(response.Mensaje);


            }




        }


    }

}

